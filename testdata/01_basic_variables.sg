// –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –ª–∏—Ç–µ—Ä–∞–ª—ã
fn test_basic_variables() -> int {
    // –¶–µ–ª—ã–µ —á–∏—Å–ª–∞
    let x: int = 42;
    let hex_val: int = 0xFF;
    let bin_val: int = 0b1010;
    let large_num: int = 1_000_000;

    // –ß–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
    let pi: float = 3.14159;
    let scientific: float = 1.5e-10;
    let negative: float = -2.5e+3;

    // –°—Ç—Ä–æ–∫–∏
    let greeting: string = "Hello, World!";
    let escaped: string = "Line1\nLine2\tTabbed";
    let unicode: string = "–ü—Ä–∏–≤–µ—Ç üëã –º–∏—Ä!";
    let raw_unicode: string = "\u{1F600}";

    // –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    let is_true: bool = true;
    let is_false: bool = false;

    // Absence –∑–Ω–∞—á–µ–Ω–∏–µ
    let nothing_val: nothing = nothing;

    // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
    let small_int: int32 = 100;
    let precise_float: float64 = 3.141592653589793;

    return x;
}