// Конструкции управления потоком
fn test_control_flow() -> int {
    let mut result: int = 0;

    // If-else
    if (result == 0) {
        result = 10;
    } else if (result < 5) {
        result = 20;
    } else {
        result = 30;
    }

    // While-петля
    let mut counter: int = 0;
    while (counter < 3) {
        counter = counter + 1;
        if (counter == 2) {
            break;
        }
    }

    // C-style for петля
    for (let i: int = 0; i < 5; i = i + 1) {
        if (i == 1) {
            continue;
        }
        result = result + i;
    }

    // For-in петля
    let items: int[] = [1, 2, 3, 4, 5];
    for item: int in items {
        result = result + item;
    }

    return result;
}

fn early_return_example() -> int {
    let x: int = 10;

    if (x > 5) {
        return x * 2;
    }

    return 0;
}
